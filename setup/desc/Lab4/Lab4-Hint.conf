Рекомендации к выполнению:
1. Управление IP-адресами и интерфейсами.
Для управления IP-адресами, интерфейсами и таблицами маршрутизации используется утилита ip.
Утилита довольно многофункциональная, поэтому и синтаксис её вызова непростой:
ip [опции] объект команда [параметры]
опции - это глобальные настройки, которые сказываются на работе всей утилиты независимо от других аргументов, их указывать необязательно.
объект - это тип данных, с которым надо будет работать, например: адреса, устройства, таблица arp, таблица маршрутизации и так далее;
команды - какое-либо действие с объектом;
параметры - само собой, командам иногда нужно передавать параметры, они передаются в этом пункте.

Чтобы посмотреть все IP адреса, связанные с сетевыми интерфейсами используйте такую команду:
    ip a
или
    ip addr show

Чтобы присвоить IP адрес для устройства нужно использовать команду add. Её общий синтаксис такой:
    ip addr add IP_адрес/маска dev интерфейс
Например, давайте присвоим тому же интерфейсу enp0s3 IP адрес 10.0.2.100 с маской подсети 255.255.255.0:
    ip addr add 10.0.2.100/255.255.255.0 dev enp0s3
Чтобы удалить IP адрес из интерфейса надо использовать команду del. Синтаксис её очень похож на предыдущую команду. Например, удалим IP адрес 10.0.2.100:
    ip addr del 10.0.2.100/255.255.255.0 dev enp0s3

Чтобы посмотреть список сетевых интерфейсов используйте объект link:
    ip l
или
    ip link show
Для включения и отключения интерфейсов тоже используется объект link, но с командой set. Синтаксис её такой:
    ip link set dev интерфейс действие
В качестве действия можно использовать up или down. Например, чтобы отключить интерфейс enp0s3 выполните:
    ip link set dev enp0s3 down
А чтобы включить его обратно:
    ip link set dev enp0s3 up
Настройка MAC адреса. Прежде чем настраивать MAC адрес ваше устройство надо отключить:
    ip link set dev enp0s3 down
Затем можно установить адрес:
    ip link set dev enp0s3 address AA:BB:CC:DD:EE:FF
А потом включить интерфейс обратно:
    ip link set dev enp0s3 up
Чтобы посмотреть содержимое таблицы ARP используйте такую команду:
    ip neigh show
или
    ip n
Для просмотра таблицы маршрутизации используйте объект route и команду show:
    ip route show
или
    ip r
2. Управление межсетевым экраном nftables
nftables предоставляет новую систему фильтрации пакетов, пользовательскую утилиту ntf, а также слой совместимости с {ip,ip6}tables. nftables использует существующие хуки, отслеживание соединений, очереди в пространстве пользователя и подсистему логирования netfilter.
nftables содержит три основных элемента: таблицы, относящиеся к семействам адресации, цепочки, из которых состоят таблицы, и правила, из которых состоят цепочки.
Семейство таблицы определяет тип пакетов, к которому могут применяться цепочки правил.
Существуют следующие семейства правил:
семейство nftables	утилита iptables
ip      (ipv4)
ip6
inet    (ipv4 и ipv6)
arp
bridge

В цепочках правила выполняются последовательно от первого к последнему. Цепочки могут обладать параметрами:
type - может быть filter, nat, route (в данной работе будет использоваться тип filter, который фильтрует все пакеты);
hook - может принимать значения: input, output, forward и другие (определяет какие пакеты должны проходить через данную цепочку: исходящие, входящие или другие);
priority - определяется числом, причем чем меньше данное число, тем раньше будет обрабатываться пакет по данной цепочке;
police - определяет стандартную политику к пакетам, для которых правила не определены в цепочке, может применять значения drop или accept.
Существует два типо цепочек: базовые и обычные.
Обычные цепочки не имееют никаких параметров, а базовые имеют хотя бы три параметра: type, hook и priority.
В обычные цепочки пакеты не попадают сами по себе. Обычные цепочки используются в качестве промежуточных, на которые ссылаются правила базовых цепочек.
Например, чтобы создать цепочку правил, которые применяются к входящим пакетам ipv4 необходимо создать таблицу семейства ip или inet, а  уже в данной таблице создать цепочку с параметрами: type filter hook input priority 0.

Правила конструируются операторов и содержатся внутри цепочек.
Обычно оператор включает некоторое выражение для сравнения и вынесения решения. Решениями могут быть accept, drop, continue, jump цепочка и goto цепочка.
Ниже приведены возможные выражения:
icmp:
  type <тип icmp>

icmpv6:
  type <тип icmpv6>

ip:
  protocol <протокол>
  daddr <адрес получателя>
  saddr <адрес отправителя>

ip6:
  daddr <адрес получателя>
  saddr <адрес отправителя>

tcp:
  dport <порт получателя>
  sport <порт отправителя>

udp:
  dport <порт получателя>
  sport <порт отправителя>
  
Например, правило пропускающее пакеты, адресованные 172.0.0.1, выглядит так:
ip daddr 172.0.0.1 accept

Использование базовых цепочек и обычных целесообразно тогда, когда для отдельных пакетов необходимо произвести отдельные действия. Для этого можно осуществить переход с базовой цепочки на обычную, используя jump или goto.
Отличие этих решений в том, что для jump, если в течении обычной цепочки не будет вынесено абсолютное решение (accept или drop), то после обычной цепочки выполнение правил продолжится в базовой. В случае goto выполнение правил завершается.

Ниже представлены команды для работы с nftables с помощью утилиты nft:
Добавить новую таблицу:
    nft add table семейство таблица
Вывести список таблиц:
    nft list tables
Вывести цепочки и правила выбранной таблицы:
    nft list table семейство таблица
Например, чтобы вывести на экран правила таблицы my_table семейства inet, выполните команду:
    nft list table inet my_table
Удалить таблицу со всеми цепочками:
    nft delete table семейство таблица
Добавить обычную цепочку цепочка в таблицу таблица:
    nft add chain семейство таблица цепочка
Например, чтобы добавить обычную цепочку my_tcp_chain к таблице my_table семейства адресации inet, выполните:
    nft add chain inet my_table my_tcp_chain
Чтобы добавить базовую цепочку, укажите хук и значение приоритета:
    nft add chain семейство таблица цепочка '{ type тип hook хук priority приоритет ; policy политика}'
Например, добавим базовую цепочку для фильтрации входящих пакетов с политикой accept:
    nft add chain inet my_table my_chain '{ type filter hook input priority 0; policy accept}'
Следующая команда выводит на экран все правила в цепочке:
    nft list chain семейство таблица цепочка
Например, следующая команда выведет правила цепочки my_output таблицы my_table семейства inet:
    nft list chain inet my_table my_output
Удалить цепочку:
    nft delete chain семейство таблица цепочка
Добавить правило в цепочку:
    nft add rule семейство таблица цепочка handle маркер оператор
Правило будет прикреплено после маркер, который можно не указывать. Если маркер (handle) не задать, то правило добавится в конец цепочки.
Чтобы добавить правило перед определённой позицией, выполните
    nft insert rule семейство таблица цепочка handle маркер оператор
Команда nft --handle list выведет список маркеров для заданной таблицы или цепочки.
Напирмер, данная команда выводит маркеры таблицы A семейства inet:
    nft --handle list table inet A
Удаление правила по маркеру:
    nft delete rule inet my_table my_input handle 10
Решение log позволяет вести журнал пакетов. Простейшее правило для сохранения информации обо всём поступающем трафике:
    nft add rule inet filter input log
Для логирования с префиксом может использоваться параметр prefix.

3. Логирование nftables в отдельный файл.
Для настройки ведения логов nftables необходимо использовать систему ulogd2.
Прежде всего настройте конфигурационный файл  /etc/ulogd.conf.
В нем после строк:
# this is a stack for logging packet send by system via LOGEMU
stack=log1:NFLOG,base1:BASE,ifi1:IFINDEX,ip2str1:IP2STR,print1:PRINTPKT,emu1:LOGEMU
Необходимо добавить:
stack=log2:NFLOG,base1:BASE,ifi1:IFINDEX,ip2str1:IP2STR,print1:PRINTPKT,emu2:LOGEMU

Далее необходимо прописать параметры логирования log2:
[log2]
group=2
[emu2]
file="<имя файла, в который будут поступать логи>"
sync=1

После чего необходимо перезапустить систему:
systemctl restart ulogd2

Далее для того, чтобы логи попадали в файл необходимо правильно задать правила логирования.
В конфигурационной файле /etc/ulogd.conf для log2 была указана группа group 2. Соответственно, при создании правил логирования должна быть обозначена аналогичная группа.
Пример правила лоигрования с префиксом для группы 2:
nft add rule inet table chain ip protocol icmp log prefix icmp-accept group 2
Данное правила таблицы table и цепочки chain будет записывать все проходящие через эту цепочку icmp-пакеты с префиксом icmp-accept в файл, который был записан в /etc/ulogd.conf.

4. Проверка настроенного экрана с помощью утилиты hping3.
Для тестирования настроенного межсетевого экрана можно воспользоваться утилитой hping3, установленной в хост-системе.
Данная утилита позволяет эмулировать отправку пакетов с устройства.

hping3 по умолчанию (без параметров) отправляет нулевой пакет с заголовком TCP на порт 0.

Вы можете выбрать использование другого протокола с помощью числовой опции, доступной для каждого из них:

-0 (режим Raw IP)
-1 (режим ICMP)
-2 (режим UDP)
-8 (Режим сканирования)
-9 (Режим прослушивания)

Пример команды, которая отправляет ICMP-пакеты на адрес 172.10.11.12
hping3 -1 172.10.11.12

