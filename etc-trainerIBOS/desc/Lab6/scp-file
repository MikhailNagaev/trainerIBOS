Linux has its roots in a student project. In 1992, an undergraduate called Linus Torvalds was studying computer science in Helsinki, Finland. Like most computer science courses, a big component of it was taught on (and about) UNIX. UNIX was the wonder operating system of the 1970's and 1980's: both a text-book example of the principles of operating system design, and sufficiently robust to be the standard OS in engineering and scientific computing. But UNIX was a commercial product (licensed by AT&T to a number of resellers), and cost more than a student could pay.
Annoyed by the shortcomings of Minix (a compact UNIX clone written as a teaching aid by Professor Andy Tannenbaum) Linus set out to write his own ``kernel'' -- the core of an operating system that handles memory allocation, talks to hardware devices, and makes sure everything keeps running. He used the GNU programming tools developed by Richard Stallman's Free Software Foundation, an organization of volunteers dedicated to fulfilling Stallman's ideal of making good software that anyone could use without paying. And when he'd written a basic kernel, he released the source code to the Linux kernel on the internet.
Source code is important. It's the original, from which compiled programs are generated. If you don't have the source code to a program, you can't modify it, to fix bugs or add new features. (Most software companies won't sell you their source code, or will only do so for an eye-watering price, because they believe that if they make it available it will destroy their revenue stream.)
What happened next was inexplicable, from the conventional, commercial software industry point of view -- and utterly predictable, to anyone who knew about the Free Software Foundation. Programmers (mostly academics and students) began using Linux. They found that it didn't do things they wanted it to do -- so they fixed it. And where they improved it, they sent the improvements to Linus, who rolled them into the kernel. And Linux began to grow.